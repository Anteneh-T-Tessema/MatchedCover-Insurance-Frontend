version: '3.8'

services:
  soc2-agents:
    build: .
    container_name: soc2-compliance-system
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DASHBOARD_PORT=3001
      - LOG_LEVEL=info
    env_file:
      - .env.soc2-agents
    volumes:
      - soc2-data:/app/data
      - soc2-logs:/app/logs
      - soc2-documentation:/app/soc2-documentation
      - soc2-evidence:/app/soc2-evidence
      - soc2-metrics:/app/soc2-metrics
    networks:
      - soc2-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  soc2-database:
    image: postgres:15-alpine
    container_name: soc2-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: soc2_compliance
      POSTGRES_USER: soc2_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql-init:/docker-entrypoint-initdb.d
    networks:
      - soc2-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U soc2_user -d soc2_compliance"]
      interval: 30s
      timeout: 10s
      retries: 5

  soc2-redis:
    image: redis:7-alpine
    container_name: soc2-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_change_me}
    volumes:
      - redis-data:/data
    networks:
      - soc2-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  soc2-nginx:
    image: nginx:alpine
    container_name: soc2-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - soc2-logs:/var/log/nginx
    depends_on:
      - soc2-agents
    networks:
      - soc2-network

  soc2-monitoring:
    image: prom/prometheus:latest
    container_name: soc2-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - soc2-network

volumes:
  soc2-data:
    driver: local
  soc2-logs:
    driver: local
  soc2-documentation:
    driver: local
  soc2-evidence:
    driver: local
  soc2-metrics:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local

networks:
  soc2-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
